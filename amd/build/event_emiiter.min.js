define("block_timestat/event_emiiter",["exports","block_timestat/screentime","core/ajax"],(function(_exports,_screentime,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_screentime=_interopRequireDefault(_screentime),_ajax=_interopRequireDefault(_ajax);_exports.init=(contextid,config)=>{const $timerDisplay=config.showtimer?document.querySelector(".timer-display"):null,$timer=config.showtimer?document.getElementById("timer"):null,$reportedtime=config.showtimer?document.getElementById("reportedtime"):null,$inactivitytime=config.showtimer?document.getElementById("inactivitytime"):null,screentime=new _screentime.default({field:{name:"content",selector:"body"},reportInterval:getReportInterval(config),inactiveInterval:getInactiveInterval(config),onReport:async log=>{log.body&&(_ajax.default.call([{methodname:"block_timestat_update_register",args:{timespent:log.body,contextid:parseInt(contextid,10)}}]),$reportedtime&&($reportedtime.textContent=formatTime(log.body)))},everySecondCallback:log=>{if(!$timer)return;const seconds=log.body||0;$timer.textContent=formatTime(seconds),$inactivitytime.textContent=formatTime(screentime.inactivityTimer)},onInactivity:()=>{$timerDisplay&&$timerDisplay.classList.add("text-black-50")},onStart:()=>{$timerDisplay&&$timerDisplay.classList.remove("text-black-50")}})};const formatTime=seconds=>new Date(1e3*seconds).toISOString().substring(11,19),getInactiveInterval=config=>{const isMobile=window.matchMedia("only screen and (max-width: 760px)").matches;let{inactivitytime:inactivitytime,inactivitytime_small:inactivitytime_small}=config;return inactivitytime=isMobile?inactivitytime_small:inactivitytime,inactivitytime=inactivitytime&&inactivitytime>=10?inactivitytime:10,inactivitytime},getReportInterval=config=>{let reportInterval=config.loginterval||10;return reportInterval=reportInterval<10?10:reportInterval,reportInterval}}));

//# sourceMappingURL=event_emiiter.min.js.map