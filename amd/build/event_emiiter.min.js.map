{"version":3,"file":"event_emiiter.min.js","sources":["../src/event_emiiter.js"],"sourcesContent":["import ScreenTime from 'block_timestat/screentime';\nimport ajax from 'core/ajax';\n\nexport const init = (contextid, config) => {\n    const $timerDisplay = config.showtimer ? document.querySelector('.timer-display') : null;\n    const $timer = config.showtimer ? document.getElementById('timer') : null;\n    const $reportedtime = config.showtimer ? document.getElementById('reportedtime') : null;\n    const $inactivitytime = config.showtimer ? document.getElementById('inactivitytime') : null;\n    const inactiveClass = 'text-black-50';\n    const screentime = new ScreenTime({\n        field: {name: 'content', selector: 'body'},\n        reportInterval: getReportInterval(config),\n        inactiveInterval: getInactiveInterval(config),\n        onReport: async (log) => {\n            if (!log.body) {\n                return;\n            }\n            ajax.call([{\n                methodname: 'block_timestat_update_register',\n                args: {\n                    timespent: log.body,\n                    contextid: parseInt(contextid, 10)\n                }\n            }]);\n            if (!$reportedtime) {\n                return;\n            }\n            $reportedtime.textContent = formatTime(log.body);\n        },\n        everySecondCallback: (log) => {\n            if (!$timer) {\n                return;\n            }\n            const seconds = log['body'] || 0;\n            $timer.textContent = formatTime(seconds);\n            $inactivitytime.textContent = formatTime(screentime.inactivityTimer);\n        },\n        onInactivity: () => {\n            if (!$timerDisplay) {\n                return;\n            }\n            $timerDisplay.classList.add(inactiveClass);\n        },\n        onStart: () => {\n            if (!$timerDisplay) {\n                return;\n            }\n            $timerDisplay.classList.remove(inactiveClass);\n        }\n    });\n};\n\nconst formatTime = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substring(11, 19);\n};\n\nconst getInactiveInterval = (config) => {\n    const isMobile = window.matchMedia(\"only screen and (max-width: 760px)\").matches;\n    let {inactivitytime, inactivitytime_small} = config;\n    inactivitytime = isMobile ? inactivitytime_small : inactivitytime;\n    inactivitytime = inactivitytime && inactivitytime >= 10 ? inactivitytime : 10;\n    return inactivitytime;\n};\n\nconst getReportInterval = (config) => {\n    let reportInterval = config.loginterval || 10;\n    reportInterval = reportInterval < 10 ? 10 : reportInterval;\n    return reportInterval;\n};"],"names":["contextid","config","$timerDisplay","showtimer","document","querySelector","$timer","getElementById","$reportedtime","$inactivitytime","screentime","ScreenTime","field","name","selector","reportInterval","getReportInterval","inactiveInterval","getInactiveInterval","onReport","async","log","body","call","methodname","args","timespent","parseInt","textContent","formatTime","everySecondCallback","seconds","inactivityTimer","onInactivity","classList","add","onStart","remove","Date","toISOString","substring","isMobile","window","matchMedia","matches","inactivitytime","inactivitytime_small","loginterval"],"mappings":"iYAGoB,CAACA,UAAWC,gBACtBC,cAAgBD,OAAOE,UAAYC,SAASC,cAAc,kBAAoB,KAC9EC,OAASL,OAAOE,UAAYC,SAASG,eAAe,SAAW,KAC/DC,cAAgBP,OAAOE,UAAYC,SAASG,eAAe,gBAAkB,KAC7EE,gBAAkBR,OAAOE,UAAYC,SAASG,eAAe,kBAAoB,KAEjFG,WAAa,IAAIC,oBAAW,CAC9BC,MAAO,CAACC,KAAM,UAAWC,SAAU,QACnCC,eAAgBC,kBAAkBf,QAClCgB,iBAAkBC,oBAAoBjB,QACtCkB,SAAUC,MAAAA,MACDC,IAAIC,qBAGJC,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CACFC,UAAWL,IAAIC,KACftB,UAAW2B,SAAS3B,UAAW,QAGlCQ,gBAGLA,cAAcoB,YAAcC,WAAWR,IAAIC,SAE/CQ,oBAAsBT,UACbf,oBAGCyB,QAAUV,IAAG,MAAY,EAC/Bf,OAAOsB,YAAcC,WAAWE,SAChCtB,gBAAgBmB,YAAcC,WAAWnB,WAAWsB,kBAExDC,aAAc,KACL/B,eAGLA,cAAcgC,UAAUC,IAjCV,kBAmClBC,QAAS,KACAlC,eAGLA,cAAcgC,UAAUG,OAvCV,2BA4CpBR,WAAcE,SACT,IAAIO,KAAe,IAAVP,SAAgBQ,cAAcC,UAAU,GAAI,IAG1DtB,oBAAuBjB,eACnBwC,SAAWC,OAAOC,WAAW,sCAAsCC,YACrEC,eAACA,eAADC,qBAAiBA,sBAAwB7C,cAC7C4C,eAAiBJ,SAAWK,qBAAuBD,eACnDA,eAAiBA,gBAAkBA,gBAAkB,GAAKA,eAAiB,GACpEA,gBAGL7B,kBAAqBf,aACnBc,eAAiBd,OAAO8C,aAAe,UAC3ChC,eAAiBA,eAAiB,GAAK,GAAKA,eACrCA"}